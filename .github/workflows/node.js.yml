name: Playwright Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: npx playwright test --reporter=html

      - name: Upload HTML report as artifact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-html-report
          path: playwright-report/



# name: Playwright Tests
# on:
#   push:
#     branches: [ main, master ]
#   pull_request:
#     branches: [ main, master ]
# jobs:
#   test:
#     timeout-minutes: 60
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v4
#     - uses: actions/setup-node@v4
#       with:
#         node-version: lts/*

#     - name: Cache node modules
#       id: cache-npm
#       uses: actions/cache@v4
#       env:
#         cache-name: cache-node-modules
#       with:
#         # npm cache files are stored in `~/.npm` on Linux/macOS
#         path: ~/.npm
#         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
#         restore-keys: |
#           ${{ runner.os }}-build-${{ env.cache-name }}-
#           ${{ runner.os }}-build-
#           ${{ runner.os }}-

#     - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
#       name: List the state of node modules
#       continue-on-error: true
#       run: npm list


#     - name: Install dependencies
#       run: npm ci
#     - name: Install Playwright Browsers
#       run: npx playwright install --with-deps
#     - name: Run Playwright tests
#       run: npx playwright test
#     - uses: actions/upload-artifact@v4
#       if: ${{ !cancelled() }}
#       with:
#         name: playwright-report
#         path: playwright-report/
#         retention-days: 30

# # name: Node.js CI

# # on:
# #   push:
# #     branches: [ "main" ]
# #   pull_request:
# #     branches: [ "main" ]

# # jobs:
# #   build:

# #     runs-on: ubuntu-latest

# #     strategy:
# #       matrix:
# #         node-version: [22.x]
# #         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

# #     steps:

  
# #     - uses: actions/checkout@v4
# #     - name: Use Node.js ${{ matrix.node-version }}
# #       uses: actions/setup-node@v4
# #       with:
# #         node-version: ${{ matrix.node-version }}
# #         cache: 'npm'
# #     - run: npm ci
# #     - run: npx playwright install --with-deps
# #     - run: npm run test:ci




#   #   jobs:
#   # test:
#   #   runs-on: ubuntu-latest

#   #   steps:
#   #     - name: Checkout code
#   #       uses: actions/checkout@v3

#   #     - name: Setup Node.js
#   #       uses: actions/setup-node@v3
#   #       with:
#   #         node-version: 18

#   #     - name: Install dependencies
#   #       run: npm ci

#   #     - name: Install Playwright browsers
#   #       run: npx playwright install --with-deps

#   #     - name: Run Playwright tests
#   #       run: npx playwright test --reporter=html

#   #     - name: Upload HTML report as artifact
#   #       if: always()
#   #       uses: actions/upload-artifact@v3
#   #       with:
#   #         name: playwright-html-report
#   #         path: playwright-report/
